# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 7175 (changed from 8010).
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# SQLite is used as the database. The SQLite file is stored in the data volume.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Apache Tika and Gotenberg servers are started with paperless and paperless
#   is configured to use these services. These provide support for consuming
#   Office documents (Word, Excel, Power Point and their LibreOffice counter-
#   parts.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker compose pull'.
# - Run 'docker compose run --rm webserver createsuperuser' to create a user.
# - Run 'docker compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

version: "3.4"
services:
  broker:
    container_name: paperless-broker
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - /srv/server-files/dmssrv-01/data:/data

  db:
    container_name: paperless-db
    image: docker.io/library/postgres:15
    restart: unless-stopped
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless

  webserver:
    container_name: paperless-webserver
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
    ports:
      - "7175:8000"
    volumes:
      - /srv/server-files/dmssrv-01/data:/usr/src/paperless/data
      - /srv/server-files/dmssrv-01/media:/usr/src/paperless/media
      - /srv/server-files/dmssrv-01/export:/usr/src/paperless/export
      - /srv/zakelijk/_PostvakIn:/usr/src/paperless/consume
    env_file: paperless.env
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db

  #     PAPERLESS_TIKA_ENABLED: 1
  #     PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
  #     PAPERLESS_TIKA_ENDPOINT: http://tika:9998

  # gotenberg:
  #   container_name: paperless-gotenberg
  #   image: docker.io/gotenberg/gotenberg:7.10
  #   restart: unless-stopped
  #   # The gotenberg chromium route is used to convert .eml files. We do not
  #   # want to allow external content like tracking pixels or even javascript.
  #   command:
  #     - "gotenberg"
  #     - "--chromium-disable-javascript=true"
  #     - "--chromium-allow-list=file:///tmp/.*"

  # tika:
  #   container_name: paperless-tika
  #   image: ghcr.io/paperless-ngx/tika:latest
  #   restart: unless-stopped

volumes:
  pgdata:
#   data:
#   media:
#   redisdata:

  